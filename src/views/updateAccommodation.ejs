<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Editar alojamiento</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    body {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      position: relative;
      overflow-x: hidden;
    }

    .video-bg-wrapper {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      z-index: 0;
      overflow: hidden;
    }

    .video-bg-wrapper video {
      width: 110vw;
      height: 120vh;
      left: -7vw;
      object-fit: cover;
      position: absolute;
      top: 0;
      z-index: 0;
    }

    .background-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(30, 42, 60, 0.45);
      z-index: 1;
    }

    .main-content {
      position: relative;
      z-index: 2;
      flex: 1 0 auto;
      min-height: 100vh;
      display: flex;
      align-items: flex-start;
      justify-content: center;
      padding-top: 2rem;
      padding-bottom: 2rem;
    }

    .card.translucent {
      background: rgba(255, 255, 255, 0.92);
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.18);
      border-radius: 1.2rem;
      padding: 2.5rem 2rem 2rem 2rem;
      max-width: 800px;
      margin: 0 auto;
      width: 100%;
    }

    #map {
      width: 100%;
      height: 320px;
      margin: 1.5rem 0 0 0;
      border-radius: 0.7rem;
      border: 1px solid #e0e7ef;
      background: #e0e7ef;
    }

    .field-error {
      color: #c00;
      font-size: 0.95em;
      min-height: 1.2em;
      display: block;
    }

    .input-error {
      border-color: #c00 !important;
    }

    .amenities-icons {
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem;
    }

    .amenity-icon {
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 70px;
      text-align: center;
    }

    .amenity-icon i {
      font-size: 1.6rem;
      color: #444;
    }

    footer {
      flex-shrink: 0;
      width: 100%;
      background: none;
      position: relative;
      z-index: 2;
      margin-top: 0;
    }

    .fade-in {
      opacity: 0;
      transform: translateY(40px);
      transition: opacity 0.8s cubic-bezier(.4, 0, .2, 1), transform 0.8s cubic-bezier(.4, 0, .2, 1);
    }

    .fade-in.visible {
      opacity: 1;
      transform: none;
    }

    @media (max-width: 768px) {
      .card.translucent {
        padding: 1.2rem 0.5rem;
      }

      .main-content {
        padding-top: 2.5rem;
      }
    }
  </style>
</head>

<body>
  <div class="video-bg-wrapper">
    <video autoplay muted loop playsinline>
      <source src="/img/createaccommodation.mp4" type="video/mp4">
      Tu navegador no soporta el video de fondo.
    </video>
    <div style="position:absolute;top:0;left:0;width:100vw;height:100vh;background:rgba(30,42,60,0.45);z-index:1;"></div>
  </div>
  <%- include('partials/navbar', { user: typeof user !== 'undefined' ? user : null }) %>
  <div class="main-content">
    <div class="card translucent shadow-lg col-lg-8 mx-auto fade-in visible">
      <h1 class="mb-4 text-center">Editar alojamiento</h1>
      <div id="formErrorBox" class="text-danger mb-3"></div>
      <form action="/api/accommodations/<%= accommodation.id %>?_method=PUT" method="POST" enctype="multipart/form-data"
        novalidate>
        <input type="hidden" name="hostId" value="<%= user._id || user.id %>">
        <div class="row g-3">
          <div class="col-md-6">
            <label for="status" class="form-label">Estado</label>
            <select id="status" name="status" class="form-select" required>
              <option value="Available" <%= accommodation.status === 'Available' ? 'selected' : '' %>>En activo</option>
              <option value="Archived" <%= accommodation.status === 'Archived' ? 'selected' : '' %>>Archivado</option>
            </select>
            <span class="field-error" id="statusError"></span>
          </div>
          <div class="col-md-6">
            <label for="title" class="form-label">Título del anuncio</label>
            <input type="text" id="title" name="title" class="form-control" required value="<%= accommodation.title %>">
            <span class="field-error" id="titleError"></span>
          </div>
          <div class="col-md-12">
            <label for="description" class="form-label">Descripción</label>
            <textarea id="description" name="description" class="form-control" required><%= accommodation.description %>
            </textarea>
            <span class="field-error" id="descriptionError"></span>
          </div>
          <div class="col-md-6">
            <label for="pricePerNight" class="form-label">Precio por noche</label>
            <input type="number" id="pricePerNight" name="pricePerNight" class="form-control" required
              value="<%= accommodation.pricePerNight %>">
            <span class="field-error" id="priceError"></span>
          </div>
          <div class="col-md-6">
            <label for="mainPhoto" class="form-label">Foto principal (subir nueva)</label>
            <input type="file" id="mainPhoto" name="mainPhoto" accept="image/*" class="form-control">
            <% if (accommodation.mainPhoto) { %>
            <input type="hidden" name="existingMainPhoto" value="<%= accommodation.mainPhoto %>">
            <div style="margin-top:0.5em;">
              <img src="<%= accommodation.mainPhoto %>" alt="Current main photo"
                style="max-width:120px;max-height:80px;border-radius:6px;">
              <span style="font-size:0.9em;color:#555;">Foto principal actual</span>
            </div>
            <% } %>
            <span class="field-error" id="mainPhotoError"></span>
          </div>
          <div class="col-md-6">
            <label for="mainPhotoLabel" class="form-label">Etiqueta para la foto principal</label>
            <input type="text" name="mainPhotoLabel" id="mainPhotoLabel" class="form-control"
              placeholder="e.g., cocina, baño, salón" value="<%= accommodation.mainPhotoLabel || '' %>">
            <span class="field-error" id="mainPhotoLabelError"></span>
          </div>
          <div class="col-md-6">
            <label for="photos" class="form-label">Fotos adicionales</label>
            <input type="file" name="photos" id="photos" accept="image/*" multiple class="form-control">
            <div id="photoLabelsContainer" class="mt-2">
              <% if (accommodation.photos && accommodation.photos.length > 0) { %>
                <% accommodation.photos.forEach(function(photo, idx) { %>
                  <div class="mb-1">
                    <label class="form-label">Etiqueta para foto adicional <%= idx+1 %>:</label>
                    <input type="text" name="photoLabel_<%= idx %>" class="form-control form-control-sm" maxlength="40" value="<%= photo.label || '' %>" placeholder="Ej: cocina, baño, salón">
                  </div>
                <% }) %>
              <% } %>
            </div>
            <span class="field-error" id="photosError"></span>
          </div>
          <div class="col-md-6">
            <label for="rooms" class="form-label">Habitaciones</label>
            <input type="number" id="rooms" name="rooms" class="form-control" required value="<%= accommodation.rooms %>">
            <span class="field-error" id="roomsError"></span>
          </div>
          <div class="col-md-6">
            <label for="beds" class="form-label">Camas</label>
            <input type="number" id="beds" name="beds" class="form-control" required min="1" max="40"
              value="<%= accommodation.beds %>">
            <span class="field-error" id="bedsError"></span>
          </div>
          <div class="col-md-6">
            <label for="maxGuests" class="form-label">Huéspedes máximos</label>
            <input type="number" id="maxGuests" name="maxGuests" class="form-control" min="1" max="40"
              required value="<%= accommodation.maxGuests %>">
            <span class="field-error" id="maxGuestsError"></span>
          </div>
          <div class="col-md-6">
            <label for="bathrooms" class="form-label">Baños</label>
            <input type="number" id="bathrooms" name="bathrooms" class="form-control" required
              value="<%= accommodation.bathrooms %>">
            <span class="field-error" id="bathroomsError"></span>
          </div>
          <div class="col-md-4">
            <label for="petsAllowed" class="form-label">Mascotas permitidas</label>
            <select id="petsAllowed" name="petsAllowed" class="form-select" required>
              <option value="true" <%= accommodation.petsAllowed ? 'selected' : '' %>>Sí</option>
              <option value="false" <%= !accommodation.petsAllowed ? 'selected' : '' %>>No</option>
            </select>
            <span class="field-error" id="petsAllowedError"></span>
          </div>
          <div class="col-md-4">
            <label for="squareMeters" class="form-label">Tamaño en m²</label>
            <input type="number" id="squareMeters" name="squareMeters" class="form-control" required
              value="<%= accommodation.squareMeters %>">
            <span class="field-error" id="squareMetersError"></span>
          </div>
          <div class="col-md-6">
            <label for="address" class="form-label">Dirección</label>
            <input type="text" id="address" name="address" class="form-control" required
              value="<%= accommodation.location && accommodation.location.address ? accommodation.location.address : '' %>">
            <span class="field-error" id="addressError"></span>
          </div>
          <div class="col-md-3">
            <label for="city" class="form-label">Ciudad</label>
            <input type="text" id="city" name="city" class="form-control" required
              value="<%= accommodation.location && accommodation.location.city ? accommodation.location.city : '' %>">
            <span class="field-error" id="cityError"></span>
          </div>
          <div class="col-md-3">
            <label for="province" class="form-label">Provincia</label>
            <select id="province" name="province" class="form-select" required>
              <option value="">Selecciona una provincia</option>
              <option value="A Coruña">A Coruña</option>
              <option value="Álava">Álava</option>
              <option value="Albacete">Albacete</option>
              <option value="Alicante">Alicante</option>
              <option value="Almería">Almería</option>
              <option value="Asturias">Asturias</option>
              <option value="Ávila">Ávila</option>
              <option value="Badajoz">Badajoz</option>
              <option value="Barcelona">Barcelona</option>
              <option value="Burgos">Burgos</option>
              <option value="Cáceres">Cáceres</option>
              <option value="Cádiz">Cádiz</option>
              <option value="Cantabria">Cantabria</option>
              <option value="Castellón">Castellón</option>
              <option value="Ciudad Real">Ciudad Real</option>
              <option value="Córdoba">Córdoba</option>
              <option value="Cuenca">Cuenca</option>
              <option value="Formentera">Formentera</option>
              <option value="Girona">Girona</option>
              <option value="Granada">Granada</option>
              <option value="Guadalajara">Guadalajara</option>
              <option value="Guipúzcoa">Guipúzcoa</option>
              <option value="Huelva">Huelva</option>
              <option value="Huesca">Huesca</option>
              <option value="Ibiza">Ibiza</option>
              <option value="Jaén">Jaén</option>
              <option value="León">León</option>
              <option value="Lérida">Lérida</option>
              <option value="Lugo">Lugo</option>
              <option value="Madrid">Madrid</option>
              <option value="Mallorca">Mallorca</option>
              <option value="Málaga">Málaga</option>
              <option value="Menorca">Menorca</option>
              <option value="Murcia">Murcia</option>
              <option value="Navarra">Navarra</option>
              <option value="Orense">Orense</option>
              <option value="Palencia">Palencia</option>
              <option value="Las Palmas">Las Palmas</option>
              <option value="Pontevedra">Pontevedra</option>
              <option value="La Rioja">La Rioja</option>
              <option value="Salamanca">Salamanca</option>
              <option value="Santa Cruz de Tenerife">Santa Cruz de Tenerife</option>
              <option value="Segovia">Segovia</option>
              <option value="Sevilla">Sevilla</option>
              <option value="Soria">Soria</option>
              <option value="Tarragona">Tarragona</option>
              <option value="Teruel">Teruel</option>
              <option value="Toledo">Toledo</option>
              <option value="Valencia">Valencia</option>
              <option value="Valladolid">Valladolid</option>
              <option value="Vizcaya">Vizcaya</option>
              <option value="Zamora">Zamora</option>
              <option value="Zaragoza">Zaragoza</option>
            </select>
            <span class="field-error" id="provinceError"></span>
          </div>
          <div class="col-md-4">
            <label for="country" class="form-label">País</label>
            <input type="text" id="country" name="country" class="form-control" required
              value="<%= accommodation.location && accommodation.location.country ? accommodation.location.country : '' %>">
            <span class="field-error" id="countryError"></span>
          </div>
          <div class="col-md-4">
            <label for="postalCode" class="form-label">Código postal</label>
            <input type="text" id="postalCode" name="postalCode" class="form-control" required
              value="<%= accommodation.location && accommodation.location.postalCode ? accommodation.location.postalCode : '' %>">
            <span class="field-error" id="postalCodeError"></span>
          </div>
          <div class="col-md-8">
            <label for="propertyType" class="form-label">Tipo de alojamiento</label>
            <select id="propertyType" name="propertyType" class="form-select" required>
              <option value="Apartment" <%= accommodation.propertyType === 'Apartment' ? 'selected' : '' %>>Apartamento
              </option>
              <option value="House" <%= accommodation.propertyType === 'House' ? 'selected' : '' %>>Casa</option>
              <option value="Studio" <%= accommodation.propertyType === 'Studio' ? 'selected' : '' %>>Estudio</option>
              <option value="Loft" <%= accommodation.propertyType === 'Loft' ? 'selected' : '' %>>Loft</option>
              <option value="Other" <%= accommodation.propertyType === 'Other' ? 'selected' : '' %>>Otros</option>
            </select>
            <span class="field-error" id="propertyTypeError"></span>
          </div>
          <div class="col-12 mt-4">
            <h5 class="mb-2">Coloca un marcador en tu dirección:</h5>
            <div id="map"></div>
            <input type="hidden" name="location.lat" id="lat"
              value="<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lat : '' %>">
            <input type="hidden" name="location.lng" id="lng"
              value="<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lng : '' %>">
          </div>
          <div class="col-12">
            <label class="form-label">Servicios disponibles (Equipamiento):</label>
            <div class="amenities-icons">
              <% Object.entries(amenityIcons).forEach(([label, icon]) => { %>
              <div class="amenity-icon">
                <label style="cursor: pointer;" title="<%= label %>">
                  <i class="fas <%= icon %>"></i><br>
                  <input type="checkbox" name="amenities" value="<%= label %>" style="margin-top: 0.4rem;"
                    <%= (accommodation.amenities && accommodation.amenities.includes(label)) ? 'checked' : '' %>>
                </label>
              </div>
              <% }) %>
            </div>
          </div>
          <div class="col-md-6">
            <label for="houseRules" class="form-label">Normas de uso</label>
            <textarea id="houseRules" name="houseRules" class="form-control"><%= accommodation.houseRules || '' %>
            </textarea>
          </div>
          <div class="col-md-6">
            <label for="cancellationPolicy" class="form-label">Política de cancelación</label>
            <input type="text" id="cancellationPolicy" name="cancellationPolicy" class="form-control"
              value="<%= accommodation.cancellationPolicy || '' %>">
          </div>
          <div class="col-md-6">
            <label for="checkIn" class="form-label">Horario de Check-in</label>
            <input type="time" id="checkIn" name="checkIn" class="form-control" value="<%= accommodation.checkIn || '' %>">
          </div>
          <div class="col-md-6">
            <label for="checkOut" class="form-label">Horario de Check-out</label>
            <input type="time" id="checkOut" name="checkOut" class="form-control" value="<%= accommodation.checkOut || '' %>">
          </div>
        </div>
        <div class="d-grid mt-4">
          <button type="submit" class="btn btn-primary btn-lg">Guardar cambios</button>
        </div>
      </form>
    </div>
  </div>
  <footer>
    <%- include('partials/footer') %>
  </footer>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapsApiKey %>&callback=initMap" async defer></script>
  <script>
    // Google Maps callback debe ser global
    function initMap() {
      const defaultLocation = {
        lat: parseFloat('<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lat : 41.3851 %>'),
        lng: parseFloat('<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lng : 2.1734 %>')
      };
      const mapDiv = document.getElementById("map");
      if (!mapDiv) return;
      const map = new google.maps.Map(mapDiv, {
        center: defaultLocation,
        zoom: 10,
      });
      let marker;
      if (defaultLocation.lat && defaultLocation.lng) {
        marker = new google.maps.Marker({
          position: defaultLocation,
          map,
        });
      }
      map.addListener("click", function (e) {
        const lat = e.latLng.lat();
        const lng = e.latLng.lng();
        document.getElementById("lat").value = lat;
        document.getElementById("lng").value = lng;
        if (marker) marker.setMap(null);
        marker = new google.maps.Marker({
          position: { lat, lng },
          map,
        });
      });
    }
    window.initMap = initMap;
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const form = document.querySelector('form');
      const errorBox = document.getElementById('formErrorBox');
      // Get all fields
      const fields = {
        title: form.title,
        pricePerNight: form.pricePerNight,
        description: form.description,
        mainPhoto: form.mainPhoto,
        mainPhotoLabel: form.mainPhotoLabel,
        photos: form.photos,
        rooms: form.rooms,
        beds: form.beds,
        maxGuests: form.maxGuests,
        bathrooms: form.bathrooms,
        petsAllowed: form.petsAllowed,
        squareMeters: form.squareMeters,
        address: form.address,
        city: form.city,
        province: form.province,
        country: form.country,
        postalCode: form.postalCode,
        propertyType: form.propertyType
      };
      const errors = {
        title: document.getElementById('titleError'),
        pricePerNight: document.getElementById('priceError'),
        description: document.getElementById('descriptionError'),
        mainPhoto: document.getElementById('mainPhotoError'),
        mainPhotoLabel: document.getElementById('mainPhotoLabelError'),
        photos: document.getElementById('photosError'),
        rooms: document.getElementById('roomsError'),
        beds: document.getElementById('bedsError'),
        maxGuests: document.getElementById('maxGuestsError'),
        bathrooms: document.getElementById('bathroomsError'),
        petsAllowed: document.getElementById('petsAllowedError'),
        squareMeters: document.getElementById('squareMetersError'),
        address: document.getElementById('addressError'),
        city: document.getElementById('cityError'),
        province: document.getElementById('provinceError'),
        country: document.getElementById('countryError'),
        postalCode: document.getElementById('postalCodeError'),
        propertyType: document.getElementById('propertyTypeError')
      };
      function setFieldError(input, errorSpan, msg) {
        errorSpan.textContent = msg;
        if (msg) {
          input.classList.add('input-error');
        } else {
          input.classList.remove('input-error');
        }
      }
      function clearError() {
        errorBox.textContent = '';
      }
      // Real-time validation para cada campo
      fields.title.addEventListener('input', function () {
        if (!fields.title.value || fields.title.value.length < 3) {
          setFieldError(fields.title, errors.title, 'El título debe tener al menos 3 caracteres.');
        } else {
          setFieldError(fields.title, errors.title, '');
        }
      });
      fields.pricePerNight.addEventListener('input', function () {
        if (!fields.pricePerNight.value || Number(fields.pricePerNight.value) <= 0) {
          setFieldError(fields.pricePerNight, errors.pricePerNight, 'El precio debe ser un número positivo.');
        } else {
          setFieldError(fields.pricePerNight, errors.pricePerNight, '');
        }
      });
      fields.description.addEventListener('input', function () {
        if (!fields.description.value || fields.description.value.length < 10) {
          setFieldError(fields.description, errors.description, 'La descripción debe tener al menos 10 caracteres.');
        } else {
          setFieldError(fields.description, errors.description, '');
        }
      });
      fields.mainPhoto.addEventListener('change', function () {
        const hasExisting = document.querySelector('input[name="existingMainPhoto"]');
        if (!fields.mainPhoto.files || fields.mainPhoto.files.length === 0) {
          if (!hasExisting || !hasExisting.value) {
            setFieldError(fields.mainPhoto, errors.mainPhoto, 'Se requiere una foto principal.');
            return;
          }
        }
        setFieldError(fields.mainPhoto, errors.mainPhoto, '');
      });
      fields.rooms.addEventListener('input', function () {
        if (!fields.rooms.value || Number(fields.rooms.value) < 0) {
          setFieldError(fields.rooms, errors.rooms, 'El número de habitaciones debe ser 0 o más.');
        } else {
          setFieldError(fields.rooms, errors.rooms, '');
        }
      });
      fields.beds.addEventListener('input', function () {
        if (!fields.beds.value || Number(fields.beds.value) < 1 || Number(fields.beds.value) > 40) {
          setFieldError(fields.beds, errors.beds, 'El número de camas debe estar entre 1 y 40.');
        } else {
          setFieldError(fields.beds, errors.beds, '');
        }
      });
      fields.maxGuests.addEventListener('input', function () {
        if (!fields.maxGuests.value || Number(fields.maxGuests.value) < 1 || Number(fields.maxGuests.value) > 40) {
          setFieldError(fields.maxGuests, errors.maxGuests, 'El número máximo de huéspedes debe estar entre 1 y 40.');
        } else {
          setFieldError(fields.maxGuests, errors.maxGuests, '');
        }
      });
      fields.bathrooms.addEventListener('input', function () {
        if (!fields.bathrooms.value || Number(fields.bathrooms.value) < 0) {
          setFieldError(fields.bathrooms, errors.bathrooms, 'El número de baños debe ser 0 o más.');
        } else {
          setFieldError(fields.bathrooms, errors.bathrooms, '');
        }
      });
      fields.petsAllowed.addEventListener('change', function () {
        if (!fields.petsAllowed.value) {
          setFieldError(fields.petsAllowed, errors.petsAllowed, 'Seleccione si se permiten mascotas.');
        } else {
          setFieldError(fields.petsAllowed, errors.petsAllowed, '');
        }
      });
      fields.squareMeters.addEventListener('input', function () {
        if (!fields.squareMeters.value || Number(fields.squareMeters.value) <= 0) {
          setFieldError(fields.squareMeters, errors.squareMeters, 'El tamaño en m² debe ser positivo.');
        } else {
          setFieldError(fields.squareMeters, errors.squareMeters, '');
        }
      });
      fields.address.addEventListener('input', function () {
        if (!fields.address.value || fields.address.value.length < 3) {
          setFieldError(fields.address, errors.address, 'La dirección debe tener al menos 3 caracteres.');
        } else {
          setFieldError(fields.address, errors.address, '');
        }
      });
      fields.city.addEventListener('input', function () {
        if (!fields.city.value || fields.city.value.length < 2) {
          setFieldError(fields.city, errors.city, 'La ciudad debe tener al menos 2 caracteres.');
        } else {
          setFieldError(fields.city, errors.city, '');
        }
      });
      fields.province.addEventListener('change', function () {
        if (!fields.province.value) {
          setFieldError(fields.province, errors.province, 'Seleccione una provincia.');
        } else {
          setFieldError(fields.province, errors.province, '');
        }
      });
      fields.country.addEventListener('input', function () {
        if (!fields.country.value || fields.country.value.length < 2) {
          setFieldError(fields.country, errors.country, 'El país debe tener al menos 2 caracteres.');
        } else {
          setFieldError(fields.country, errors.country, '');
        }
      });
      fields.postalCode.addEventListener('input', function () {
        if (!fields.postalCode.value || fields.postalCode.value.length < 3) {
          setFieldError(fields.postalCode, errors.postalCode, 'El código postal debe tener al menos 3 caracteres.');
        } else {
          setFieldError(fields.postalCode, errors.postalCode, '');
        }
      });
      fields.propertyType.addEventListener('change', function () {
        if (!fields.propertyType.value) {
          setFieldError(fields.propertyType, errors.propertyType, 'Seleccione un tipo de alojamiento.');
        } else {
          setFieldError(fields.propertyType, errors.propertyType, '');
        }
      });
      // On submit, check all fields again
      form.addEventListener('submit', function (e) {
        clearError();
        let hasError = false;
        if (!fields.title.value || fields.title.value.length < 3) {
          setFieldError(fields.title, errors.title, 'El título debe tener al menos 3 caracteres.');
          hasError = true;
        }
        if (!fields.pricePerNight.value || Number(fields.pricePerNight.value) <= 0) {
          setFieldError(fields.pricePerNight, errors.pricePerNight, 'El precio debe ser un número positivo.');
          hasError = true;
        }
        if (!fields.description.value || fields.description.value.length < 10) {
          setFieldError(fields.description, errors.description, 'La descripción debe tener al menos 10 caracteres.');
          hasError = true;
        }
        const hasExisting = document.querySelector('input[name="existingMainPhoto"]');
        if (!fields.mainPhoto.files || fields.mainPhoto.files.length === 0) {
          if (!hasExisting || !hasExisting.value) {
            setFieldError(fields.mainPhoto, errors.mainPhoto, 'Se requiere una foto principal.');
            hasError = true;
          }
        }
        if (!fields.rooms.value || Number(fields.rooms.value) < 0) {
          setFieldError(fields.rooms, errors.rooms, 'El número de habitaciones debe ser 0 o más.');
          hasError = true;
        }
        if (!fields.beds.value || Number(fields.beds.value) < 1 || Number(fields.beds.value) > 40) {
          setFieldError(fields.beds, errors.beds, 'El número de camas debe estar entre 1 y 40.');
          hasError = true;
        }
        if (!fields.maxGuests.value || Number(fields.maxGuests.value) < 1 || Number(fields.maxGuests.value) > 40) {
          setFieldError(fields.maxGuests, errors.maxGuests, 'El número máximo de huéspedes debe estar entre 1 y 40.');
          hasError = true;
        }
        if (!fields.bathrooms.value || Number(fields.bathrooms.value) < 0) {
          setFieldError(fields.bathrooms, errors.bathrooms, 'El número de baños debe ser 0 o más.');
          hasError = true;
        }
        if (!fields.petsAllowed.value) {
          setFieldError(fields.petsAllowed, errors.petsAllowed, 'Seleccione si se permiten mascotas.');
          hasError = true;
        }
        if (!fields.squareMeters.value || Number(fields.squareMeters.value) <= 0) {
          setFieldError(fields.squareMeters, errors.squareMeters, 'El tamaño en m² debe ser positivo.');
          hasError = true;
        }
        if (!fields.address.value || fields.address.value.length < 3) {
          setFieldError(fields.address, errors.address, 'La dirección debe tener al menos 3 caracteres.');
          hasError = true;
        }
        if (!fields.city.value || fields.city.value.length < 2) {
          setFieldError(fields.city, errors.city, 'La ciudad debe tener al menos 2 caracteres.');
          hasError = true;
        }
        if (!fields.province.value) {
          setFieldError(fields.province, errors.province, 'Seleccione una provincia.');
          hasError = true;
        }
        if (!fields.country.value || fields.country.value.length < 2) {
          setFieldError(fields.country, errors.country, 'El país debe tener al menos 2 caracteres.');
          hasError = true;
        }
        if (!fields.postalCode.value || fields.postalCode.value.length < 3) {
          setFieldError(fields.postalCode, errors.postalCode, 'El código postal debe tener al menos 3 caracteres.');
          hasError = true;
        }
        if (!fields.propertyType.value) {
          setFieldError(fields.propertyType, errors.propertyType, 'Seleccione un tipo de alojamiento.');
          hasError = true;
        }
        if (hasError) {
          errorBox.textContent = 'Por favor, corrige los errores antes de enviar.';
          e.preventDefault();
        }
      });
    });
  </script>
  <script>
    // Inputs dinámicos para etiquetas de nuevas fotos adicionales
    const photosInput = document.getElementById('photos');
    const photoLabelsContainer = document.getElementById('photoLabelsContainer');
    if (photosInput && photoLabelsContainer) {
      photosInput.addEventListener('change', function() {
        // Mantener los inputs de etiquetas existentes
        let existing = photoLabelsContainer.querySelectorAll('input[name^="photoLabel_"]');
        let count = existing.length;
        Array.from(photosInput.files).forEach((file, idx) => {
          const div = document.createElement('div');
          div.className = 'mb-1';
          div.innerHTML = `<label class='form-label'>Etiqueta para nueva foto ${count+idx+1}:</label><input type='text' name='photoLabel_${count+idx}' class='form-control form-control-sm' maxlength='40' placeholder='Ej: cocina, baño, salón'>`;
          photoLabelsContainer.appendChild(div);
        });
      });
    }
  </script>
</body>

</html>