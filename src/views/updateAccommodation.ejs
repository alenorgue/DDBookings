<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Editar alojamiento</title>
  <link rel="stylesheet" href="https://unpkg.com/@picocss/pico@2.0.6/css/pico.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />


  <style>
    #map {
      width: 100%;
      height: 300px;
      margin: 1rem 0;
    }

    form .grid {
      display: flex;
      flex-direction: column;
      gap: 1.2rem;
    }

    form .grid>div {
      width: 100%;
    }

    form .grid label {
      margin-bottom: 0.2rem;
    }

    form .grid input,
    form .grid textarea,
    form .grid select {
      width: 100%;
    }

    form button[type="submit"] {
      margin-top: 1.5rem;
    }

    .input-error {
      border-color: #c00 !important;
    }

    .field-error {
      color: #c00;
      font-size: 0.9em;
      min-height: 1.2em;
      display: block;
    }
  </style>
</head>

<body>
    <%- include('partials/navbar', { user: typeof user !== 'undefined' ? user : null }) %>
  <main class="container">
    <h1>Editar Alojamiento</h1>
    <p>Completa el formulario para actualizar los detalles del alojamiento.</p>

    <div id="formErrorBox" style="color:#c00; margin-bottom:1em;"></div>
    <form action="/api/accommodations/<%= accommodation.id %>?_method=PUT" method="POST" enctype="multipart/form-data">
      <div>
        <label for="status">Status</label>
        <select id="status" name="status" required>
          <option value="Available" <%= accommodation.status === 'Available' ? 'selected' : '' %>>En activo</option>
          <option value="Archived" <%= accommodation.status === 'Archived' ? 'selected' : '' %>>Archivado</option>
          </select>
        <span class="field-error" id="statusError"></span>
      </div>
      <input type="hidden" name="hostId" value="<%= user._id || user.id %>">
      <div class="grid">
        <div>
          <label for="title">Name</label>
          <input type="text" id="title" name="title" required value="<%= accommodation.title %>">
          <span class="field-error" id="titleError"></span>
        </div>

        <div>
          <label for="pricePerNight">Price per Night</label>
          <input type="number" id="pricePerNight" name="pricePerNight" required value="<%= accommodation.pricePerNight %>">
          <span class="field-error" id="priceError"></span>
        </div>
        <div>
          <label for="description">Description</label>
          <textarea id="description" name="description" required><%= accommodation.description %></textarea>
          <span class="field-error" id="descriptionError"></span>
        </div>
        <div>
          <label for="mainPhoto">Main Photo (Upload)</label>
          <input type="file" id="mainPhoto" name="mainPhoto" accept="image/*">
          <% if (accommodation.mainPhoto) { %>
            <input type="hidden" name="existingMainPhoto" value="<%= accommodation.mainPhoto %>">
            <div style="margin-top:0.5em;">
              <img src="<%= accommodation.mainPhoto %>" alt="Current main photo" style="max-width:120px;max-height:80px;border-radius:6px;">
              <span style="font-size:0.9em;color:#555;">Current main photo</span>
            </div>
          <% } %>
          <span class="field-error" id="mainPhotoError"></span>
        </div>
        <div>
          <label for="mainPhotoLabel">Describe Main Photo</label>
          <input type="text" name="mainPhotoLabel" id="mainPhotoLabel" placeholder="e.g., cocina, ba침o, sal칩n" value="<%= accommodation.mainPhotoLabel || '' %>">
          <span class="field-error" id="mainPhotoLabelError"></span>
        </div>
        <div>
          <label for="photos">Upload Additional Photos</label>
          <input type="file" name="photos" id="photos" accept="image/*" multiple>
          <span class="field-error" id="photosError"></span>
        </div>
        <div>
          <label for="photoLabels">Describe Each Photo (separate with commas)</label>
          <input type="text" name="photoLabels" id="photoLabels" placeholder="e.g., cocina, ba침o, sal칩n" value="<%= (accommodation.photos && accommodation.photos.map(p => p.label).filter(Boolean).join(', ')) || '' %>">
          <span class="field-error" id="photoLabelsError"></span>
        </div>
        <div>
          <label for="rooms">Rooms</label>
          <input type="number" id="rooms" name="rooms" required value="<%= accommodation.rooms %>">
          <span class="field-error" id="roomsError"></span>
        </div>
        <div>
          <label for="beds">Beds</label>
          <input type="number" id="beds" name="beds" required min="1" max="40" value="<%= accommodation.beds %>">
          <span class="field-error" id="bedsError"></span>
        </div>
        <div><label for="maxGuests">Max. Guests</label>
          <input type="number" id="maxGuests" name="maxGuests" min="1" max="40" required value="<%= accommodation.maxGuests %>">
          <span class="field-error" id="maxGuestsError"></span>
        </div>
        <div>
          <label for="bathrooms">Bathrooms</label>
          <input type="number" id="bathrooms" name="bathrooms" required value="<%= accommodation.bathrooms %>">
          <span class="field-error" id="bathroomsError"></span>
        </div>
        <div><label for="petsAllowed">Pets Allowed</label>
          <select id="petsAllowed" name="petsAllowed" required>
            <option value="true" <%= accommodation.petsAllowed ? 'selected' : '' %>>Yes</option>
            <option value="false" <%= !accommodation.petsAllowed ? 'selected' : '' %>>No</option>
          </select>
          <span class="field-error" id="petsAllowedError"></span>
        </div>
        <div><label for="squareMeters">Square Meters</label>
          <input type="number" id="squareMeters" name="squareMeters" required value="<%= accommodation.squareMeters %>">
          <span class="field-error" id="squareMetersError"></span>
        </div>
        <div>
          <label for="address">Address</label>
          <input type="text" id="address" name="address" required value="<%= accommodation.location && accommodation.location.address ? accommodation.location.address : '' %>">
          <span class="field-error" id="addressError"></span>
        </div>
        <div>
          <label for="city">City</label>
          <input type="text" id="city" name="city" required value="<%= accommodation.location && accommodation.location.city ? accommodation.location.city : '' %>">
          <span class="field-error" id="cityError"></span>
        </div>
        <div>
          <label for="country">Country</label>
          <input type="text" id="country" name="country" required value="<%= accommodation.location && accommodation.location.country ? accommodation.location.country : '' %>">
          <span class="field-error" id="countryError"></span>
        </div>
        <div>
          <label for="postalCode">Postal Code</label>
          <input type="text" id="postalCode" name="postalCode" required value="<%= accommodation.location && accommodation.location.postalCode ? accommodation.location.postalCode : '' %>">
          <span class="field-error" id="postalCodeError"></span>
        </div>
        <h3>Select location on map</h3>
        <div id="map"></div>

        <input type="hidden" name="location.lat" id="lat" value="<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lat : '' %>">
        <input type="hidden" name="location.lng" id="lng" value="<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lng : '' %>">

        <div>
          <label for="propertyType">Property Type</label>
          <select id="propertyType" name="propertyType" required>
            <option value="Apartment" <%= accommodation.propertyType === 'Apartment' ? 'selected' : '' %>>Apartment</option>
            <option value="House" <%= accommodation.propertyType === 'House' ? 'selected' : '' %>>House</option>
            <option value="Studio" <%= accommodation.propertyType === 'Studio' ? 'selected' : '' %>>Studio</option>
            <option value="Loft" <%= accommodation.propertyType === 'Loft' ? 'selected' : '' %>>Loft</option>
            <option value="Other" <%= accommodation.propertyType === 'Other' ? 'selected' : '' %>>Other</option>
          </select>
          <span class="field-error" id="propertyTypeError"></span>
        </div>
        <div>
          <label>Available Services (Amenities)</label>
          <div style="display: flex; flex-wrap: wrap; gap: 1.5rem;">
            <% Object.entries(amenityIcons).forEach(([label, icon]) => { %>
              <div style="display: flex; flex-direction: column; align-items: center; width: 70px; text-align: center;">
                <label style="cursor: pointer;" title="<%= label %>">
                  <i class="fas <%= icon %>" style="font-size: 1.6rem; color: #444;"></i><br>
                  <input type="checkbox" name="amenities" value="<%= label %>" style="margin-top: 0.4rem;" <%= (accommodation.amenities && accommodation.amenities.includes(label)) ? 'checked' : '' %>>
                </label>
              </div>
            <% }) %>
          </div>
        </div>

        <div>
          <label for="houseRules">House Rules</label>
          <textarea id="houseRules" name="houseRules"><%= accommodation.houseRules || '' %></textarea>
        </div>
        <div>
          <label for="cancellationPolicy">Cancellation Policy</label>
          <input type="text" id="cancellationPolicy" name="cancellationPolicy" value="<%= accommodation.cancellationPolicy || '' %>">
        </div>
        <div>
          <label for="checkIn">Check-in Time</label>
          <input type="time" id="checkIn" name="checkIn" value="<%= accommodation.checkIn || '' %>">
        </div>
        <div>
          <label for="checkOut">Check-out Time</label>
          <input type="time" id="checkOut" name="checkOut" value="<%= accommodation.checkOut || '' %>">
        </div>
      </div>
      <button type="submit">Guardar cambios</button>
    </form>
  </main>
    <%- include('partials/footer') %>
  <script src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapsApiKey %>&callback=initMap" async defer></script>
  <script>
    // Definir la ubicaci칩n inicial usando EJS para pasar los datos al JS del navegador
    const accommodationLocation = {
      lat: parseFloat('<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lat : 41.3851 %>'),
      lng: parseFloat('<%= accommodation.location && accommodation.location.coordinates ? accommodation.location.coordinates.lng : 2.1734 %>')
    };
    function initMap() {
      const map = new google.maps.Map(document.getElementById("map"), {
        center: accommodationLocation,
        zoom: 10,
      });
      let marker;
      // Si hay coordenadas, mostrar el marcador inicial
      if (accommodationLocation.lat && accommodationLocation.lng) {
        marker = new google.maps.Marker({
          position: accommodationLocation,
          map,
        });
      }
      map.addListener("click", function (e) {
        const lat = e.latLng.lat();
        const lng = e.latLng.lng();
        document.getElementById("lat").value = lat;
        document.getElementById("lng").value = lng;
        if (marker) marker.setMap(null);
        marker = new google.maps.Marker({
          position: { lat, lng },
          map,
        });
      });
    }

    document.addEventListener('DOMContentLoaded', function () {
      const form = document.querySelector('form');
      const errorBox = document.getElementById('formErrorBox');
      // Get all fields
      const fields = {
        title: form.title,
        pricePerNight: form.pricePerNight,
        description: form.description,
        mainPhoto: form.mainPhoto,
        mainPhotoLabel: form.mainPhotoLabel,
        photos: form.photos,
        photoLabels: form.photoLabels,
        rooms: form.rooms,
        beds: form.beds,
        maxGuests: form.maxGuests,
        bathrooms: form.bathrooms,
        petsAllowed: form.petsAllowed,
        squareMeters: form.squareMeters,
        address: form.address,
        city: form.city,
        country: form.country,
        postalCode: form.postalCode,
        propertyType: form.propertyType
      };
      const errors = {
        title: document.getElementById('titleError'),
        pricePerNight: document.getElementById('priceError'),
        description: document.getElementById('descriptionError'),
        mainPhoto: document.getElementById('mainPhotoError'),
        mainPhotoLabel: document.getElementById('mainPhotoLabelError'),
        photos: document.getElementById('photosError'),
        photoLabels: document.getElementById('photoLabelsError'),
        rooms: document.getElementById('roomsError'),
        beds: document.getElementById('bedsError'),
        maxGuests: document.getElementById('maxGuestsError'),
        bathrooms: document.getElementById('bathroomsError'),
        petsAllowed: document.getElementById('petsAllowedError'),
        squareMeters: document.getElementById('squareMetersError'),
        address: document.getElementById('addressError'),
        city: document.getElementById('cityError'),
        country: document.getElementById('countryError'),
        postalCode: document.getElementById('postalCodeError'),
        propertyType: document.getElementById('propertyTypeError')
      };
      function setFieldError(input, errorSpan, msg) {
        errorSpan.textContent = msg;
        if (msg) {
          input.classList.add('input-error');
        } else {
          input.classList.remove('input-error');
        }
      }
      function clearError() {
        errorBox.textContent = '';
      }
      // Real-time validation para cada campo alineada con backend
      fields.title.addEventListener('input', function () {
        if (!fields.title.value || fields.title.value.length < 5) {
          setFieldError(fields.title, errors.title, 'Name must be at least 5 characters.');
        } else {
          setFieldError(fields.title, errors.title, '');
        }
      });
      fields.pricePerNight.addEventListener('input', function () {
        if (!fields.pricePerNight.value || Number(fields.pricePerNight.value) < 10) {
          setFieldError(fields.pricePerNight, errors.pricePerNight, 'Price must be at least 10.');
        } else {
          setFieldError(fields.pricePerNight, errors.pricePerNight, '');
        }
      });
      fields.description.addEventListener('input', function () {
        if (!fields.description.value || fields.description.value.length < 30) {
          setFieldError(fields.description, errors.description, 'Description must be at least 30 characters.');
        } else {
          setFieldError(fields.description, errors.description, '');
        }
      });
      fields.mainPhoto.addEventListener('change', function () {
        // Solo obligatorio si no hay mainPhoto existente
        const hasExisting = document.querySelector('input[name="existingMainPhoto"]');
        if (!fields.mainPhoto.files || fields.mainPhoto.files.length === 0) {
          if (!hasExisting || !hasExisting.value) {
            setFieldError(fields.mainPhoto, errors.mainPhoto, 'Main photo is required.');
            return;
          }
        }
        setFieldError(fields.mainPhoto, errors.mainPhoto, '');
      });
      fields.rooms.addEventListener('input', function () {
        if (!fields.rooms.value || Number(fields.rooms.value) < 1 || Number(fields.rooms.value) > 20) {
          setFieldError(fields.rooms, errors.rooms, 'Rooms must be between 1 and 20.');
        } else {
          setFieldError(fields.rooms, errors.rooms, '');
        }
      });
      fields.beds.addEventListener('input', function () {
        if (!fields.beds.value || Number(fields.beds.value) < 1 || Number(fields.beds.value) > 40) {
          setFieldError(fields.beds, errors.beds, 'Beds must be between 1 and 40.');
        } else {
          setFieldError(fields.beds, errors.beds, '');
        }
      });
      fields.maxGuests.addEventListener('input', function () {
        if (!fields.maxGuests.value || Number(fields.maxGuests.value) < 1 || Number(fields.maxGuests.value) > 40) {
          setFieldError(fields.maxGuests, errors.maxGuests, 'Max guests must be between 1 and 40.');
        } else {
          setFieldError(fields.maxGuests, errors.maxGuests, '');
        }
      });
      fields.bathrooms.addEventListener('input', function () {
        if (!fields.bathrooms.value || Number(fields.bathrooms.value) < 1 || Number(fields.bathrooms.value) > 20) {
          setFieldError(fields.bathrooms, errors.bathrooms, 'Bathrooms must be between 1 and 20.');
        } else {
          setFieldError(fields.bathrooms, errors.bathrooms, '');
        }
      });
      fields.petsAllowed.addEventListener('change', function () {
        if (!fields.petsAllowed.value) {
          setFieldError(fields.petsAllowed, errors.petsAllowed, 'Select if pets are allowed.');
        } else {
          setFieldError(fields.petsAllowed, errors.petsAllowed, '');
        }
      });
      fields.squareMeters.addEventListener('input', function () {
        if (!fields.squareMeters.value || Number(fields.squareMeters.value) <= 0) {
          setFieldError(fields.squareMeters, errors.squareMeters, 'Square meters must be positive.');
        } else {
          setFieldError(fields.squareMeters, errors.squareMeters, '');
        }
      });
      fields.address.addEventListener('input', function () {
        if (!fields.address.value || fields.address.value.length < 3) {
          setFieldError(fields.address, errors.address, 'Address must be at least 3 characters.');
        } else {
          setFieldError(fields.address, errors.address, '');
        }
      });
      fields.city.addEventListener('input', function () {
        if (!fields.city.value || fields.city.value.length < 2) {
          setFieldError(fields.city, errors.city, 'City must be at least 2 characters.');
        } else {
          setFieldError(fields.city, errors.city, '');
        }
      });
      fields.country.addEventListener('input', function () {
        if (!fields.country.value || fields.country.value.length < 2) {
          setFieldError(fields.country, errors.country, 'Country must be at least 2 characters.');
        } else {
          setFieldError(fields.country, errors.country, '');
        }
      });
      fields.postalCode.addEventListener('input', function () {
        if (!fields.postalCode.value || fields.postalCode.value.length < 3) {
          setFieldError(fields.postalCode, errors.postalCode, 'Postal code must be at least 3 characters.');
        } else {
          setFieldError(fields.postalCode, errors.postalCode, '');
        }
      });
      fields.propertyType.addEventListener('change', function () {
        if (!fields.propertyType.value) {
          setFieldError(fields.propertyType, errors.propertyType, 'Select a property type.');
        } else {
          setFieldError(fields.propertyType, errors.propertyType, '');
        }
      });
      // On submit, check all fields again
      form.addEventListener('submit', function (e) {
        clearError();
        let hasError = false;
        if (!fields.title.value || fields.title.value.length < 5) {
          setFieldError(fields.title, errors.title, 'Name must be at least 5 characters.');
          hasError = true;
        }
        if (!fields.pricePerNight.value || Number(fields.pricePerNight.value) < 10) {
          setFieldError(fields.pricePerNight, errors.pricePerNight, 'Price must be at least 10.');
          hasError = true;
        }
        if (!fields.description.value || fields.description.value.length < 30) {
          setFieldError(fields.description, errors.description, 'Description must be at least 30 characters.');
          hasError = true;
        }
        // Main photo solo obligatoria si no hay existente
        const hasExisting = document.querySelector('input[name="existingMainPhoto"]');
        if (!fields.mainPhoto.files || fields.mainPhoto.files.length === 0) {
          if (!hasExisting || !hasExisting.value) {
            setFieldError(fields.mainPhoto, errors.mainPhoto, 'Main photo is required.');
            hasError = true;
          }
        }
        if (!fields.rooms.value || Number(fields.rooms.value) < 1 || Number(fields.rooms.value) > 20) {
          setFieldError(fields.rooms, errors.rooms, 'Rooms must be between 1 and 20.');
          hasError = true;
        }
        if (!fields.beds.value || Number(fields.beds.value) < 1 || Number(fields.beds.value) > 40) {
          setFieldError(fields.beds, errors.beds, 'Beds must be between 1 and 40.');
          hasError = true;
        }
        if (!fields.maxGuests.value || Number(fields.maxGuests.value) < 1 || Number(fields.maxGuests.value) > 40) {
          setFieldError(fields.maxGuests, errors.maxGuests, 'Max guests must be between 1 and 40.');
          hasError = true;
        }
        if (!fields.bathrooms.value || Number(fields.bathrooms.value) < 1 || Number(fields.bathrooms.value) > 20) {
          setFieldError(fields.bathrooms, errors.bathrooms, 'Bathrooms must be between 1 and 20.');
          hasError = true;
        }
        if (!fields.address.value || fields.address.value.length < 3) {
          setFieldError(fields.address, errors.address, 'Address must be at least 3 characters.');
          hasError = true;
        }
        if (!fields.city.value || fields.city.value.length < 2) {
          setFieldError(fields.city, errors.city, 'City must be at least 2 characters.');
          hasError = true;
        }
        if (!fields.country.value || fields.country.value.length < 2) {
          setFieldError(fields.country, errors.country, 'Country must be at least 2 characters.');
          hasError = true;
        }
        if (!fields.postalCode.value || fields.postalCode.value.length < 3) {
          setFieldError(fields.postalCode, errors.postalCode, 'Postal code must be at least 3 characters.');
          hasError = true;
        }
        if (!fields.propertyType.value) {
          setFieldError(fields.propertyType, errors.propertyType, 'Select a property type.');
          hasError = true;
        }
        // Validaci칩n de lat/lng
        const lat = document.getElementById('lat').value;
        const lng = document.getElementById('lng').value;
        if (!lat || isNaN(Number(lat)) || !lng || isNaN(Number(lng))) {
          errorBox.textContent = 'Debes seleccionar una ubicaci칩n v치lida en el mapa (latitud y longitud).';
          hasError = true;
        }
        if (hasError) {
          errorBox.textContent = errorBox.textContent || 'Please fix the errors before submitting.';
          e.preventDefault();
        }
      });
    });
  </script>
</body>

</html>